program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "5.33.5"}, {"coremlc-version", "1877.40.3"}, {"coremltools-component-torch", "2.1.0+cu121"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "7.1"}})]
{
    func main<ios15>(tensor<fp32, [1, 3, 160, 160]> image) {
            tensor<fp32, []> image__scaled___y_0 = const()[name = tensor<string, []>("image__scaled___y_0"), val = tensor<fp32, []>(0x1.010102p-8)];
            tensor<fp32, [1, 3, 160, 160]> image__scaled__ = mul(x = image, y = image__scaled___y_0)[name = tensor<string, []>("image__scaled__")];
            tensor<int32, []> var_19 = const()[name = tensor<string, []>("op_19"), val = tensor<int32, []>(1)];
            tensor<int32, []> var_20 = const()[name = tensor<string, []>("op_20"), val = tensor<int32, []>(2)];
            tensor<int32, [2]> var_58 = const()[name = tensor<string, []>("op_58"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_60 = const()[name = tensor<string, []>("op_60"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_1_pad_type_0 = const()[name = tensor<string, []>("input_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_1_pad_0 = const()[name = tensor<string, []>("input_1_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<string, []> image_to_fp16_dtype_0 = const()[name = tensor<string, []>("image_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [16, 3, 3, 3]> model_model_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_0_conv_weight_to_fp16"), val = tensor<fp16, [16, 3, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [16]> model_model_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_0_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1024)))];
            tensor<fp16, [1, 3, 160, 160]> cast_9 = cast(dtype = image_to_fp16_dtype_0, x = image__scaled__)[name = tensor<string, []>("cast_9")];
            tensor<fp16, [1, 16, 80, 80]> input_1_cast_fp16 = conv(bias = model_model_0_conv_bias_to_fp16, dilations = var_60, groups = var_19, pad = input_1_pad_0, pad_type = input_1_pad_type_0, strides = var_58, weight = model_model_0_conv_weight_to_fp16, x = cast_9)[name = tensor<string, []>("input_1_cast_fp16")];
            tensor<fp16, [1, 16, 80, 80]> input_3_cast_fp16 = silu(x = input_1_cast_fp16)[name = tensor<string, []>("input_3_cast_fp16")];
            tensor<int32, [2]> var_67 = const()[name = tensor<string, []>("op_67"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_69 = const()[name = tensor<string, []>("op_69"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_5_pad_type_0 = const()[name = tensor<string, []>("input_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_5_pad_0 = const()[name = tensor<string, []>("input_5_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 16, 3, 3]> model_model_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_1_conv_weight_to_fp16"), val = tensor<fp16, [32, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1152)))];
            tensor<fp16, [32]> model_model_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10432)))];
            tensor<fp16, [1, 32, 40, 40]> input_5_cast_fp16 = conv(bias = model_model_1_conv_bias_to_fp16, dilations = var_69, groups = var_19, pad = input_5_pad_0, pad_type = input_5_pad_type_0, strides = var_67, weight = model_model_1_conv_weight_to_fp16, x = input_3_cast_fp16)[name = tensor<string, []>("input_5_cast_fp16")];
            tensor<fp16, [1, 32, 40, 40]> input_7_cast_fp16 = silu(x = input_5_cast_fp16)[name = tensor<string, []>("input_7_cast_fp16")];
            tensor<int32, [2]> var_80 = const()[name = tensor<string, []>("op_80"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_82 = const()[name = tensor<string, []>("op_82"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_9_pad_type_0 = const()[name = tensor<string, []>("input_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_9_pad_0 = const()[name = tensor<string, []>("input_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [32, 32, 1, 1]> model_model_2_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_2_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10560)))];
            tensor<fp16, [32]> model_model_2_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_2_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12672)))];
            tensor<fp16, [1, 32, 40, 40]> input_9_cast_fp16 = conv(bias = model_model_2_cv1_conv_bias_to_fp16, dilations = var_82, groups = var_19, pad = input_9_pad_0, pad_type = input_9_pad_type_0, strides = var_80, weight = model_model_2_cv1_conv_weight_to_fp16, x = input_7_cast_fp16)[name = tensor<string, []>("input_9_cast_fp16")];
            tensor<fp16, [1, 32, 40, 40]> var_85_cast_fp16 = silu(x = input_9_cast_fp16)[name = tensor<string, []>("op_85_cast_fp16")];
            tensor<int32, [2]> var_86 = const()[name = tensor<string, []>("op_86"), val = tensor<int32, [2]>([16, 16])];
            tensor<int32, []> var_87_axis_0 = const()[name = tensor<string, []>("op_87_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 16, 40, 40]> var_87_cast_fp16_0, tensor<fp16, [1, 16, 40, 40]> var_87_cast_fp16_1 = split(axis = var_87_axis_0, split_sizes = var_86, x = var_85_cast_fp16)[name = tensor<string, []>("op_87_cast_fp16")];
            tensor<int32, [2]> var_95 = const()[name = tensor<string, []>("op_95"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_97 = const()[name = tensor<string, []>("op_97"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_13_pad_type_0 = const()[name = tensor<string, []>("input_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_13_pad_0 = const()[name = tensor<string, []>("input_13_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [16, 16, 3, 3]> model_model_2_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_2_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [16, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12800)))];
            tensor<fp16, [16]> model_model_2_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_2_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17472)))];
            tensor<fp16, [1, 16, 40, 40]> input_13_cast_fp16 = conv(bias = model_model_2_m_0_cv1_conv_bias_to_fp16, dilations = var_97, groups = var_19, pad = input_13_pad_0, pad_type = input_13_pad_type_0, strides = var_95, weight = model_model_2_m_0_cv1_conv_weight_to_fp16, x = var_87_cast_fp16_1)[name = tensor<string, []>("input_13_cast_fp16")];
            tensor<fp16, [1, 16, 40, 40]> input_15_cast_fp16 = silu(x = input_13_cast_fp16)[name = tensor<string, []>("input_15_cast_fp16")];
            tensor<int32, [2]> var_104 = const()[name = tensor<string, []>("op_104"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_106 = const()[name = tensor<string, []>("op_106"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_17_pad_type_0 = const()[name = tensor<string, []>("input_17_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_17_pad_0 = const()[name = tensor<string, []>("input_17_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [16, 16, 3, 3]> model_model_2_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_2_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [16, 16, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17600)))];
            tensor<fp16, [16]> model_model_2_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_2_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [16]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22272)))];
            tensor<fp16, [1, 16, 40, 40]> input_17_cast_fp16 = conv(bias = model_model_2_m_0_cv2_conv_bias_to_fp16, dilations = var_106, groups = var_19, pad = input_17_pad_0, pad_type = input_17_pad_type_0, strides = var_104, weight = model_model_2_m_0_cv2_conv_weight_to_fp16, x = input_15_cast_fp16)[name = tensor<string, []>("input_17_cast_fp16")];
            tensor<fp16, [1, 16, 40, 40]> var_109_cast_fp16 = silu(x = input_17_cast_fp16)[name = tensor<string, []>("op_109_cast_fp16")];
            tensor<fp16, [1, 16, 40, 40]> var_110_cast_fp16 = add(x = var_87_cast_fp16_1, y = var_109_cast_fp16)[name = tensor<string, []>("op_110_cast_fp16")];
            tensor<bool, []> input_19_interleave_0 = const()[name = tensor<string, []>("input_19_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 48, 40, 40]> input_19_cast_fp16 = concat(axis = var_19, interleave = input_19_interleave_0, values = (var_87_cast_fp16_0, var_87_cast_fp16_1, var_110_cast_fp16))[name = tensor<string, []>("input_19_cast_fp16")];
            tensor<int32, [2]> var_116 = const()[name = tensor<string, []>("op_116"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_118 = const()[name = tensor<string, []>("op_118"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_21_pad_type_0 = const()[name = tensor<string, []>("input_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_21_pad_0 = const()[name = tensor<string, []>("input_21_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [32, 48, 1, 1]> model_model_2_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_2_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 48, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22400)))];
            tensor<fp16, [32]> model_model_2_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_2_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25536)))];
            tensor<fp16, [1, 32, 40, 40]> input_21_cast_fp16 = conv(bias = model_model_2_cv2_conv_bias_to_fp16, dilations = var_118, groups = var_19, pad = input_21_pad_0, pad_type = input_21_pad_type_0, strides = var_116, weight = model_model_2_cv2_conv_weight_to_fp16, x = input_19_cast_fp16)[name = tensor<string, []>("input_21_cast_fp16")];
            tensor<fp16, [1, 32, 40, 40]> input_23_cast_fp16 = silu(x = input_21_cast_fp16)[name = tensor<string, []>("input_23_cast_fp16")];
            tensor<int32, [2]> var_125 = const()[name = tensor<string, []>("op_125"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_127 = const()[name = tensor<string, []>("op_127"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_25_pad_type_0 = const()[name = tensor<string, []>("input_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_25_pad_0 = const()[name = tensor<string, []>("input_25_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 32, 3, 3]> model_model_3_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_3_conv_weight_to_fp16"), val = tensor<fp16, [64, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25664)))];
            tensor<fp16, [64]> model_model_3_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_3_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62592)))];
            tensor<fp16, [1, 64, 20, 20]> input_25_cast_fp16 = conv(bias = model_model_3_conv_bias_to_fp16, dilations = var_127, groups = var_19, pad = input_25_pad_0, pad_type = input_25_pad_type_0, strides = var_125, weight = model_model_3_conv_weight_to_fp16, x = input_23_cast_fp16)[name = tensor<string, []>("input_25_cast_fp16")];
            tensor<fp16, [1, 64, 20, 20]> input_27_cast_fp16 = silu(x = input_25_cast_fp16)[name = tensor<string, []>("input_27_cast_fp16")];
            tensor<int32, [2]> var_140 = const()[name = tensor<string, []>("op_140"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_142 = const()[name = tensor<string, []>("op_142"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_29_pad_type_0 = const()[name = tensor<string, []>("input_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_29_pad_0 = const()[name = tensor<string, []>("input_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_model_4_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62784)))];
            tensor<fp16, [64]> model_model_4_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71040)))];
            tensor<fp16, [1, 64, 20, 20]> input_29_cast_fp16 = conv(bias = model_model_4_cv1_conv_bias_to_fp16, dilations = var_142, groups = var_19, pad = input_29_pad_0, pad_type = input_29_pad_type_0, strides = var_140, weight = model_model_4_cv1_conv_weight_to_fp16, x = input_27_cast_fp16)[name = tensor<string, []>("input_29_cast_fp16")];
            tensor<fp16, [1, 64, 20, 20]> var_145_cast_fp16 = silu(x = input_29_cast_fp16)[name = tensor<string, []>("op_145_cast_fp16")];
            tensor<int32, [2]> var_146 = const()[name = tensor<string, []>("op_146"), val = tensor<int32, [2]>([32, 32])];
            tensor<int32, []> var_147_axis_0 = const()[name = tensor<string, []>("op_147_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 32, 20, 20]> var_147_cast_fp16_0, tensor<fp16, [1, 32, 20, 20]> var_147_cast_fp16_1 = split(axis = var_147_axis_0, split_sizes = var_146, x = var_145_cast_fp16)[name = tensor<string, []>("op_147_cast_fp16")];
            tensor<int32, [2]> var_155 = const()[name = tensor<string, []>("op_155"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_157 = const()[name = tensor<string, []>("op_157"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_33_pad_type_0 = const()[name = tensor<string, []>("input_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_33_pad_0 = const()[name = tensor<string, []>("input_33_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_model_4_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71232)))];
            tensor<fp16, [32]> model_model_4_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89728)))];
            tensor<fp16, [1, 32, 20, 20]> input_33_cast_fp16 = conv(bias = model_model_4_m_0_cv1_conv_bias_to_fp16, dilations = var_157, groups = var_19, pad = input_33_pad_0, pad_type = input_33_pad_type_0, strides = var_155, weight = model_model_4_m_0_cv1_conv_weight_to_fp16, x = var_147_cast_fp16_1)[name = tensor<string, []>("input_33_cast_fp16")];
            tensor<fp16, [1, 32, 20, 20]> input_35_cast_fp16 = silu(x = input_33_cast_fp16)[name = tensor<string, []>("input_35_cast_fp16")];
            tensor<int32, [2]> var_164 = const()[name = tensor<string, []>("op_164"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_166 = const()[name = tensor<string, []>("op_166"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_37_pad_type_0 = const()[name = tensor<string, []>("input_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_37_pad_0 = const()[name = tensor<string, []>("input_37_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_model_4_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(89856)))];
            tensor<fp16, [32]> model_model_4_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(108352)))];
            tensor<fp16, [1, 32, 20, 20]> input_37_cast_fp16 = conv(bias = model_model_4_m_0_cv2_conv_bias_to_fp16, dilations = var_166, groups = var_19, pad = input_37_pad_0, pad_type = input_37_pad_type_0, strides = var_164, weight = model_model_4_m_0_cv2_conv_weight_to_fp16, x = input_35_cast_fp16)[name = tensor<string, []>("input_37_cast_fp16")];
            tensor<fp16, [1, 32, 20, 20]> var_169_cast_fp16 = silu(x = input_37_cast_fp16)[name = tensor<string, []>("op_169_cast_fp16")];
            tensor<fp16, [1, 32, 20, 20]> input_39_cast_fp16 = add(x = var_147_cast_fp16_1, y = var_169_cast_fp16)[name = tensor<string, []>("input_39_cast_fp16")];
            tensor<int32, [2]> var_176 = const()[name = tensor<string, []>("op_176"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_178 = const()[name = tensor<string, []>("op_178"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_41_pad_type_0 = const()[name = tensor<string, []>("input_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_41_pad_0 = const()[name = tensor<string, []>("input_41_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_model_4_m_1_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_1_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(108480)))];
            tensor<fp16, [32]> model_model_4_m_1_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_1_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(126976)))];
            tensor<fp16, [1, 32, 20, 20]> input_41_cast_fp16 = conv(bias = model_model_4_m_1_cv1_conv_bias_to_fp16, dilations = var_178, groups = var_19, pad = input_41_pad_0, pad_type = input_41_pad_type_0, strides = var_176, weight = model_model_4_m_1_cv1_conv_weight_to_fp16, x = input_39_cast_fp16)[name = tensor<string, []>("input_41_cast_fp16")];
            tensor<fp16, [1, 32, 20, 20]> input_43_cast_fp16 = silu(x = input_41_cast_fp16)[name = tensor<string, []>("input_43_cast_fp16")];
            tensor<int32, [2]> var_185 = const()[name = tensor<string, []>("op_185"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_187 = const()[name = tensor<string, []>("op_187"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_45_pad_type_0 = const()[name = tensor<string, []>("input_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_45_pad_0 = const()[name = tensor<string, []>("input_45_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_model_4_m_1_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_1_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(127104)))];
            tensor<fp16, [32]> model_model_4_m_1_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_m_1_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(145600)))];
            tensor<fp16, [1, 32, 20, 20]> input_45_cast_fp16 = conv(bias = model_model_4_m_1_cv2_conv_bias_to_fp16, dilations = var_187, groups = var_19, pad = input_45_pad_0, pad_type = input_45_pad_type_0, strides = var_185, weight = model_model_4_m_1_cv2_conv_weight_to_fp16, x = input_43_cast_fp16)[name = tensor<string, []>("input_45_cast_fp16")];
            tensor<fp16, [1, 32, 20, 20]> var_190_cast_fp16 = silu(x = input_45_cast_fp16)[name = tensor<string, []>("op_190_cast_fp16")];
            tensor<fp16, [1, 32, 20, 20]> var_191_cast_fp16 = add(x = input_39_cast_fp16, y = var_190_cast_fp16)[name = tensor<string, []>("op_191_cast_fp16")];
            tensor<bool, []> input_47_interleave_0 = const()[name = tensor<string, []>("input_47_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 20, 20]> input_47_cast_fp16 = concat(axis = var_19, interleave = input_47_interleave_0, values = (var_147_cast_fp16_0, var_147_cast_fp16_1, input_39_cast_fp16, var_191_cast_fp16))[name = tensor<string, []>("input_47_cast_fp16")];
            tensor<int32, [2]> var_197 = const()[name = tensor<string, []>("op_197"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_199 = const()[name = tensor<string, []>("op_199"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_49_pad_type_0 = const()[name = tensor<string, []>("input_49_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_49_pad_0 = const()[name = tensor<string, []>("input_49_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 128, 1, 1]> model_model_4_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_4_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(145728)))];
            tensor<fp16, [64]> model_model_4_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_4_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(162176)))];
            tensor<fp16, [1, 64, 20, 20]> input_49_cast_fp16 = conv(bias = model_model_4_cv2_conv_bias_to_fp16, dilations = var_199, groups = var_19, pad = input_49_pad_0, pad_type = input_49_pad_type_0, strides = var_197, weight = model_model_4_cv2_conv_weight_to_fp16, x = input_47_cast_fp16)[name = tensor<string, []>("input_49_cast_fp16")];
            tensor<fp16, [1, 64, 20, 20]> input_51_cast_fp16 = silu(x = input_49_cast_fp16)[name = tensor<string, []>("input_51_cast_fp16")];
            tensor<int32, [2]> var_206 = const()[name = tensor<string, []>("op_206"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_208 = const()[name = tensor<string, []>("op_208"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_53_pad_type_0 = const()[name = tensor<string, []>("input_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_53_pad_0 = const()[name = tensor<string, []>("input_53_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 64, 3, 3]> model_model_5_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_5_conv_weight_to_fp16"), val = tensor<fp16, [128, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(162368)))];
            tensor<fp16, [128]> model_model_5_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_5_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(309888)))];
            tensor<fp16, [1, 128, 10, 10]> input_53_cast_fp16 = conv(bias = model_model_5_conv_bias_to_fp16, dilations = var_208, groups = var_19, pad = input_53_pad_0, pad_type = input_53_pad_type_0, strides = var_206, weight = model_model_5_conv_weight_to_fp16, x = input_51_cast_fp16)[name = tensor<string, []>("input_53_cast_fp16")];
            tensor<fp16, [1, 128, 10, 10]> input_55_cast_fp16 = silu(x = input_53_cast_fp16)[name = tensor<string, []>("input_55_cast_fp16")];
            tensor<int32, [2]> var_221 = const()[name = tensor<string, []>("op_221"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_223 = const()[name = tensor<string, []>("op_223"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_57_pad_type_0 = const()[name = tensor<string, []>("input_57_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_57_pad_0 = const()[name = tensor<string, []>("input_57_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 128, 1, 1]> model_model_6_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(310208)))];
            tensor<fp16, [128]> model_model_6_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(343040)))];
            tensor<fp16, [1, 128, 10, 10]> input_57_cast_fp16 = conv(bias = model_model_6_cv1_conv_bias_to_fp16, dilations = var_223, groups = var_19, pad = input_57_pad_0, pad_type = input_57_pad_type_0, strides = var_221, weight = model_model_6_cv1_conv_weight_to_fp16, x = input_55_cast_fp16)[name = tensor<string, []>("input_57_cast_fp16")];
            tensor<fp16, [1, 128, 10, 10]> var_226_cast_fp16 = silu(x = input_57_cast_fp16)[name = tensor<string, []>("op_226_cast_fp16")];
            tensor<int32, [2]> var_227 = const()[name = tensor<string, []>("op_227"), val = tensor<int32, [2]>([64, 64])];
            tensor<int32, []> var_228_axis_0 = const()[name = tensor<string, []>("op_228_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 10, 10]> var_228_cast_fp16_0, tensor<fp16, [1, 64, 10, 10]> var_228_cast_fp16_1 = split(axis = var_228_axis_0, split_sizes = var_227, x = var_226_cast_fp16)[name = tensor<string, []>("op_228_cast_fp16")];
            tensor<int32, [2]> var_236 = const()[name = tensor<string, []>("op_236"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_238 = const()[name = tensor<string, []>("op_238"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_61_pad_type_0 = const()[name = tensor<string, []>("input_61_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_61_pad_0 = const()[name = tensor<string, []>("input_61_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_6_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(343360)))];
            tensor<fp16, [64]> model_model_6_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(417152)))];
            tensor<fp16, [1, 64, 10, 10]> input_61_cast_fp16 = conv(bias = model_model_6_m_0_cv1_conv_bias_to_fp16, dilations = var_238, groups = var_19, pad = input_61_pad_0, pad_type = input_61_pad_type_0, strides = var_236, weight = model_model_6_m_0_cv1_conv_weight_to_fp16, x = var_228_cast_fp16_1)[name = tensor<string, []>("input_61_cast_fp16")];
            tensor<fp16, [1, 64, 10, 10]> input_63_cast_fp16 = silu(x = input_61_cast_fp16)[name = tensor<string, []>("input_63_cast_fp16")];
            tensor<int32, [2]> var_245 = const()[name = tensor<string, []>("op_245"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_247 = const()[name = tensor<string, []>("op_247"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_65_pad_type_0 = const()[name = tensor<string, []>("input_65_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_65_pad_0 = const()[name = tensor<string, []>("input_65_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_6_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(417344)))];
            tensor<fp16, [64]> model_model_6_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(491136)))];
            tensor<fp16, [1, 64, 10, 10]> input_65_cast_fp16 = conv(bias = model_model_6_m_0_cv2_conv_bias_to_fp16, dilations = var_247, groups = var_19, pad = input_65_pad_0, pad_type = input_65_pad_type_0, strides = var_245, weight = model_model_6_m_0_cv2_conv_weight_to_fp16, x = input_63_cast_fp16)[name = tensor<string, []>("input_65_cast_fp16")];
            tensor<fp16, [1, 64, 10, 10]> var_250_cast_fp16 = silu(x = input_65_cast_fp16)[name = tensor<string, []>("op_250_cast_fp16")];
            tensor<fp16, [1, 64, 10, 10]> input_67_cast_fp16 = add(x = var_228_cast_fp16_1, y = var_250_cast_fp16)[name = tensor<string, []>("input_67_cast_fp16")];
            tensor<int32, [2]> var_257 = const()[name = tensor<string, []>("op_257"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_259 = const()[name = tensor<string, []>("op_259"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_69_pad_type_0 = const()[name = tensor<string, []>("input_69_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_69_pad_0 = const()[name = tensor<string, []>("input_69_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_6_m_1_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_1_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(491328)))];
            tensor<fp16, [64]> model_model_6_m_1_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_1_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565120)))];
            tensor<fp16, [1, 64, 10, 10]> input_69_cast_fp16 = conv(bias = model_model_6_m_1_cv1_conv_bias_to_fp16, dilations = var_259, groups = var_19, pad = input_69_pad_0, pad_type = input_69_pad_type_0, strides = var_257, weight = model_model_6_m_1_cv1_conv_weight_to_fp16, x = input_67_cast_fp16)[name = tensor<string, []>("input_69_cast_fp16")];
            tensor<fp16, [1, 64, 10, 10]> input_71_cast_fp16 = silu(x = input_69_cast_fp16)[name = tensor<string, []>("input_71_cast_fp16")];
            tensor<int32, [2]> var_266 = const()[name = tensor<string, []>("op_266"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_268 = const()[name = tensor<string, []>("op_268"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_73_pad_type_0 = const()[name = tensor<string, []>("input_73_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_73_pad_0 = const()[name = tensor<string, []>("input_73_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_6_m_1_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_1_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(565312)))];
            tensor<fp16, [64]> model_model_6_m_1_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_m_1_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(639104)))];
            tensor<fp16, [1, 64, 10, 10]> input_73_cast_fp16 = conv(bias = model_model_6_m_1_cv2_conv_bias_to_fp16, dilations = var_268, groups = var_19, pad = input_73_pad_0, pad_type = input_73_pad_type_0, strides = var_266, weight = model_model_6_m_1_cv2_conv_weight_to_fp16, x = input_71_cast_fp16)[name = tensor<string, []>("input_73_cast_fp16")];
            tensor<fp16, [1, 64, 10, 10]> var_271_cast_fp16 = silu(x = input_73_cast_fp16)[name = tensor<string, []>("op_271_cast_fp16")];
            tensor<fp16, [1, 64, 10, 10]> var_272_cast_fp16 = add(x = input_67_cast_fp16, y = var_271_cast_fp16)[name = tensor<string, []>("op_272_cast_fp16")];
            tensor<bool, []> input_75_interleave_0 = const()[name = tensor<string, []>("input_75_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 256, 10, 10]> input_75_cast_fp16 = concat(axis = var_19, interleave = input_75_interleave_0, values = (var_228_cast_fp16_0, var_228_cast_fp16_1, input_67_cast_fp16, var_272_cast_fp16))[name = tensor<string, []>("input_75_cast_fp16")];
            tensor<int32, [2]> var_278 = const()[name = tensor<string, []>("op_278"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_280 = const()[name = tensor<string, []>("op_280"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_77_pad_type_0 = const()[name = tensor<string, []>("input_77_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_77_pad_0 = const()[name = tensor<string, []>("input_77_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 256, 1, 1]> model_model_6_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_6_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(639296)))];
            tensor<fp16, [128]> model_model_6_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_6_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(704896)))];
            tensor<fp16, [1, 128, 10, 10]> input_77_cast_fp16 = conv(bias = model_model_6_cv2_conv_bias_to_fp16, dilations = var_280, groups = var_19, pad = input_77_pad_0, pad_type = input_77_pad_type_0, strides = var_278, weight = model_model_6_cv2_conv_weight_to_fp16, x = input_75_cast_fp16)[name = tensor<string, []>("input_77_cast_fp16")];
            tensor<fp16, [1, 128, 10, 10]> input_79_cast_fp16 = silu(x = input_77_cast_fp16)[name = tensor<string, []>("input_79_cast_fp16")];
            tensor<int32, [2]> var_287 = const()[name = tensor<string, []>("op_287"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_289 = const()[name = tensor<string, []>("op_289"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_81_pad_type_0 = const()[name = tensor<string, []>("input_81_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_81_pad_0 = const()[name = tensor<string, []>("input_81_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [256, 128, 3, 3]> model_model_7_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_7_conv_weight_to_fp16"), val = tensor<fp16, [256, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(705216)))];
            tensor<fp16, [256]> model_model_7_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_7_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1295104)))];
            tensor<fp16, [1, 256, 5, 5]> input_81_cast_fp16 = conv(bias = model_model_7_conv_bias_to_fp16, dilations = var_289, groups = var_19, pad = input_81_pad_0, pad_type = input_81_pad_type_0, strides = var_287, weight = model_model_7_conv_weight_to_fp16, x = input_79_cast_fp16)[name = tensor<string, []>("input_81_cast_fp16")];
            tensor<fp16, [1, 256, 5, 5]> input_83_cast_fp16 = silu(x = input_81_cast_fp16)[name = tensor<string, []>("input_83_cast_fp16")];
            tensor<int32, [2]> var_300 = const()[name = tensor<string, []>("op_300"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_302 = const()[name = tensor<string, []>("op_302"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_85_pad_type_0 = const()[name = tensor<string, []>("input_85_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_85_pad_0 = const()[name = tensor<string, []>("input_85_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 256, 1, 1]> model_model_8_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_8_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1295680)))];
            tensor<fp16, [256]> model_model_8_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_8_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1426816)))];
            tensor<fp16, [1, 256, 5, 5]> input_85_cast_fp16 = conv(bias = model_model_8_cv1_conv_bias_to_fp16, dilations = var_302, groups = var_19, pad = input_85_pad_0, pad_type = input_85_pad_type_0, strides = var_300, weight = model_model_8_cv1_conv_weight_to_fp16, x = input_83_cast_fp16)[name = tensor<string, []>("input_85_cast_fp16")];
            tensor<fp16, [1, 256, 5, 5]> var_305_cast_fp16 = silu(x = input_85_cast_fp16)[name = tensor<string, []>("op_305_cast_fp16")];
            tensor<int32, [2]> var_306 = const()[name = tensor<string, []>("op_306"), val = tensor<int32, [2]>([128, 128])];
            tensor<int32, []> var_307_axis_0 = const()[name = tensor<string, []>("op_307_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 5, 5]> var_307_cast_fp16_0, tensor<fp16, [1, 128, 5, 5]> var_307_cast_fp16_1 = split(axis = var_307_axis_0, split_sizes = var_306, x = var_305_cast_fp16)[name = tensor<string, []>("op_307_cast_fp16")];
            tensor<int32, [2]> var_315 = const()[name = tensor<string, []>("op_315"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_317 = const()[name = tensor<string, []>("op_317"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_89_pad_type_0 = const()[name = tensor<string, []>("input_89_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_89_pad_0 = const()[name = tensor<string, []>("input_89_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_8_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_8_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1427392)))];
            tensor<fp16, [128]> model_model_8_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_8_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1722368)))];
            tensor<fp16, [1, 128, 5, 5]> input_89_cast_fp16 = conv(bias = model_model_8_m_0_cv1_conv_bias_to_fp16, dilations = var_317, groups = var_19, pad = input_89_pad_0, pad_type = input_89_pad_type_0, strides = var_315, weight = model_model_8_m_0_cv1_conv_weight_to_fp16, x = var_307_cast_fp16_1)[name = tensor<string, []>("input_89_cast_fp16")];
            tensor<fp16, [1, 128, 5, 5]> input_91_cast_fp16 = silu(x = input_89_cast_fp16)[name = tensor<string, []>("input_91_cast_fp16")];
            tensor<int32, [2]> var_324 = const()[name = tensor<string, []>("op_324"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_326 = const()[name = tensor<string, []>("op_326"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_93_pad_type_0 = const()[name = tensor<string, []>("input_93_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_93_pad_0 = const()[name = tensor<string, []>("input_93_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_8_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_8_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1722688)))];
            tensor<fp16, [128]> model_model_8_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_8_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2017664)))];
            tensor<fp16, [1, 128, 5, 5]> input_93_cast_fp16 = conv(bias = model_model_8_m_0_cv2_conv_bias_to_fp16, dilations = var_326, groups = var_19, pad = input_93_pad_0, pad_type = input_93_pad_type_0, strides = var_324, weight = model_model_8_m_0_cv2_conv_weight_to_fp16, x = input_91_cast_fp16)[name = tensor<string, []>("input_93_cast_fp16")];
            tensor<fp16, [1, 128, 5, 5]> var_329_cast_fp16 = silu(x = input_93_cast_fp16)[name = tensor<string, []>("op_329_cast_fp16")];
            tensor<fp16, [1, 128, 5, 5]> var_330_cast_fp16 = add(x = var_307_cast_fp16_1, y = var_329_cast_fp16)[name = tensor<string, []>("op_330_cast_fp16")];
            tensor<bool, []> input_95_interleave_0 = const()[name = tensor<string, []>("input_95_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 5, 5]> input_95_cast_fp16 = concat(axis = var_19, interleave = input_95_interleave_0, values = (var_307_cast_fp16_0, var_307_cast_fp16_1, var_330_cast_fp16))[name = tensor<string, []>("input_95_cast_fp16")];
            tensor<int32, [2]> var_336 = const()[name = tensor<string, []>("op_336"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_338 = const()[name = tensor<string, []>("op_338"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_97_pad_type_0 = const()[name = tensor<string, []>("input_97_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_97_pad_0 = const()[name = tensor<string, []>("input_97_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 384, 1, 1]> model_model_8_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_8_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2017984)))];
            tensor<fp16, [256]> model_model_8_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_8_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2214656)))];
            tensor<fp16, [1, 256, 5, 5]> input_97_cast_fp16 = conv(bias = model_model_8_cv2_conv_bias_to_fp16, dilations = var_338, groups = var_19, pad = input_97_pad_0, pad_type = input_97_pad_type_0, strides = var_336, weight = model_model_8_cv2_conv_weight_to_fp16, x = input_95_cast_fp16)[name = tensor<string, []>("input_97_cast_fp16")];
            tensor<fp16, [1, 256, 5, 5]> input_99_cast_fp16 = silu(x = input_97_cast_fp16)[name = tensor<string, []>("input_99_cast_fp16")];
            tensor<int32, [2]> var_347 = const()[name = tensor<string, []>("op_347"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_349 = const()[name = tensor<string, []>("op_349"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_101_pad_type_0 = const()[name = tensor<string, []>("input_101_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_101_pad_0 = const()[name = tensor<string, []>("input_101_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 256, 1, 1]> model_model_9_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_9_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2215232)))];
            tensor<fp16, [128]> model_model_9_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_9_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2280832)))];
            tensor<fp16, [1, 128, 5, 5]> input_101_cast_fp16 = conv(bias = model_model_9_cv1_conv_bias_to_fp16, dilations = var_349, groups = var_19, pad = input_101_pad_0, pad_type = input_101_pad_type_0, strides = var_347, weight = model_model_9_cv1_conv_weight_to_fp16, x = input_99_cast_fp16)[name = tensor<string, []>("input_101_cast_fp16")];
            tensor<fp16, [1, 128, 5, 5]> input_103_cast_fp16 = silu(x = input_101_cast_fp16)[name = tensor<string, []>("input_103_cast_fp16")];
            tensor<int32, [2]> var_353 = const()[name = tensor<string, []>("op_353"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_354 = const()[name = tensor<string, []>("op_354"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_105_pad_type_0 = const()[name = tensor<string, []>("input_105_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_105_pad_0 = const()[name = tensor<string, []>("input_105_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> input_105_ceil_mode_0 = const()[name = tensor<string, []>("input_105_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 5, 5]> input_105_cast_fp16 = max_pool(ceil_mode = input_105_ceil_mode_0, kernel_sizes = var_353, pad = input_105_pad_0, pad_type = input_105_pad_type_0, strides = var_354, x = input_103_cast_fp16)[name = tensor<string, []>("input_105_cast_fp16")];
            tensor<int32, [2]> var_358 = const()[name = tensor<string, []>("op_358"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_359 = const()[name = tensor<string, []>("op_359"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_107_pad_type_0 = const()[name = tensor<string, []>("input_107_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_107_pad_0 = const()[name = tensor<string, []>("input_107_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> input_107_ceil_mode_0 = const()[name = tensor<string, []>("input_107_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 5, 5]> input_107_cast_fp16 = max_pool(ceil_mode = input_107_ceil_mode_0, kernel_sizes = var_358, pad = input_107_pad_0, pad_type = input_107_pad_type_0, strides = var_359, x = input_105_cast_fp16)[name = tensor<string, []>("input_107_cast_fp16")];
            tensor<int32, [2]> var_363 = const()[name = tensor<string, []>("op_363"), val = tensor<int32, [2]>([5, 5])];
            tensor<int32, [2]> var_364 = const()[name = tensor<string, []>("op_364"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_367_pad_type_0 = const()[name = tensor<string, []>("op_367_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_367_pad_0 = const()[name = tensor<string, []>("op_367_pad_0"), val = tensor<int32, [4]>([2, 2, 2, 2])];
            tensor<bool, []> var_367_ceil_mode_0 = const()[name = tensor<string, []>("op_367_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 5, 5]> var_367_cast_fp16 = max_pool(ceil_mode = var_367_ceil_mode_0, kernel_sizes = var_363, pad = var_367_pad_0, pad_type = var_367_pad_type_0, strides = var_364, x = input_107_cast_fp16)[name = tensor<string, []>("op_367_cast_fp16")];
            tensor<bool, []> input_109_interleave_0 = const()[name = tensor<string, []>("input_109_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 5, 5]> input_109_cast_fp16 = concat(axis = var_19, interleave = input_109_interleave_0, values = (input_103_cast_fp16, input_105_cast_fp16, input_107_cast_fp16, var_367_cast_fp16))[name = tensor<string, []>("input_109_cast_fp16")];
            tensor<int32, [2]> var_373 = const()[name = tensor<string, []>("op_373"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_375 = const()[name = tensor<string, []>("op_375"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_111_pad_type_0 = const()[name = tensor<string, []>("input_111_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_111_pad_0 = const()[name = tensor<string, []>("input_111_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 512, 1, 1]> model_model_9_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_9_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2281152)))];
            tensor<fp16, [256]> model_model_9_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_9_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2543360)))];
            tensor<fp16, [1, 256, 5, 5]> input_111_cast_fp16 = conv(bias = model_model_9_cv2_conv_bias_to_fp16, dilations = var_375, groups = var_19, pad = input_111_pad_0, pad_type = input_111_pad_type_0, strides = var_373, weight = model_model_9_cv2_conv_weight_to_fp16, x = input_109_cast_fp16)[name = tensor<string, []>("input_111_cast_fp16")];
            tensor<fp16, [1, 256, 5, 5]> input_113_cast_fp16 = silu(x = input_111_cast_fp16)[name = tensor<string, []>("input_113_cast_fp16")];
            tensor<fp32, []> var_380_scale_factor_height_0 = const()[name = tensor<string, []>("op_380_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> var_380_scale_factor_width_0 = const()[name = tensor<string, []>("op_380_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 256, 10, 10]> var_380_cast_fp16 = upsample_nearest_neighbor(scale_factor_height = var_380_scale_factor_height_0, scale_factor_width = var_380_scale_factor_width_0, x = input_113_cast_fp16)[name = tensor<string, []>("op_380_cast_fp16")];
            tensor<bool, []> input_115_interleave_0 = const()[name = tensor<string, []>("input_115_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 10, 10]> input_115_cast_fp16 = concat(axis = var_19, interleave = input_115_interleave_0, values = (var_380_cast_fp16, input_79_cast_fp16))[name = tensor<string, []>("input_115_cast_fp16")];
            tensor<int32, [2]> var_390 = const()[name = tensor<string, []>("op_390"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_392 = const()[name = tensor<string, []>("op_392"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_117_pad_type_0 = const()[name = tensor<string, []>("input_117_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_117_pad_0 = const()[name = tensor<string, []>("input_117_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 384, 1, 1]> model_model_12_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_12_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2543936)))];
            tensor<fp16, [128]> model_model_12_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_12_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2642304)))];
            tensor<fp16, [1, 128, 10, 10]> input_117_cast_fp16 = conv(bias = model_model_12_cv1_conv_bias_to_fp16, dilations = var_392, groups = var_19, pad = input_117_pad_0, pad_type = input_117_pad_type_0, strides = var_390, weight = model_model_12_cv1_conv_weight_to_fp16, x = input_115_cast_fp16)[name = tensor<string, []>("input_117_cast_fp16")];
            tensor<fp16, [1, 128, 10, 10]> var_395_cast_fp16 = silu(x = input_117_cast_fp16)[name = tensor<string, []>("op_395_cast_fp16")];
            tensor<int32, [2]> var_396 = const()[name = tensor<string, []>("op_396"), val = tensor<int32, [2]>([64, 64])];
            tensor<int32, []> var_397_axis_0 = const()[name = tensor<string, []>("op_397_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 10, 10]> var_397_cast_fp16_0, tensor<fp16, [1, 64, 10, 10]> var_397_cast_fp16_1 = split(axis = var_397_axis_0, split_sizes = var_396, x = var_395_cast_fp16)[name = tensor<string, []>("op_397_cast_fp16")];
            tensor<int32, [2]> var_405 = const()[name = tensor<string, []>("op_405"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_407 = const()[name = tensor<string, []>("op_407"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_121_pad_type_0 = const()[name = tensor<string, []>("input_121_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_121_pad_0 = const()[name = tensor<string, []>("input_121_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_12_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_12_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2642624)))];
            tensor<fp16, [64]> model_model_12_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_12_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2716416)))];
            tensor<fp16, [1, 64, 10, 10]> input_121_cast_fp16 = conv(bias = model_model_12_m_0_cv1_conv_bias_to_fp16, dilations = var_407, groups = var_19, pad = input_121_pad_0, pad_type = input_121_pad_type_0, strides = var_405, weight = model_model_12_m_0_cv1_conv_weight_to_fp16, x = var_397_cast_fp16_1)[name = tensor<string, []>("input_121_cast_fp16")];
            tensor<fp16, [1, 64, 10, 10]> input_123_cast_fp16 = silu(x = input_121_cast_fp16)[name = tensor<string, []>("input_123_cast_fp16")];
            tensor<int32, [2]> var_414 = const()[name = tensor<string, []>("op_414"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_416 = const()[name = tensor<string, []>("op_416"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_125_pad_type_0 = const()[name = tensor<string, []>("input_125_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_125_pad_0 = const()[name = tensor<string, []>("input_125_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_12_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_12_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2716608)))];
            tensor<fp16, [64]> model_model_12_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_12_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2790400)))];
            tensor<fp16, [1, 64, 10, 10]> input_125_cast_fp16 = conv(bias = model_model_12_m_0_cv2_conv_bias_to_fp16, dilations = var_416, groups = var_19, pad = input_125_pad_0, pad_type = input_125_pad_type_0, strides = var_414, weight = model_model_12_m_0_cv2_conv_weight_to_fp16, x = input_123_cast_fp16)[name = tensor<string, []>("input_125_cast_fp16")];
            tensor<fp16, [1, 64, 10, 10]> var_419_cast_fp16 = silu(x = input_125_cast_fp16)[name = tensor<string, []>("op_419_cast_fp16")];
            tensor<bool, []> input_127_interleave_0 = const()[name = tensor<string, []>("input_127_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 10, 10]> input_127_cast_fp16 = concat(axis = var_19, interleave = input_127_interleave_0, values = (var_397_cast_fp16_0, var_397_cast_fp16_1, var_419_cast_fp16))[name = tensor<string, []>("input_127_cast_fp16")];
            tensor<int32, [2]> var_425 = const()[name = tensor<string, []>("op_425"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_427 = const()[name = tensor<string, []>("op_427"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_129_pad_type_0 = const()[name = tensor<string, []>("input_129_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_129_pad_0 = const()[name = tensor<string, []>("input_129_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 192, 1, 1]> model_model_12_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_12_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2790592)))];
            tensor<fp16, [128]> model_model_12_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_12_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2839808)))];
            tensor<fp16, [1, 128, 10, 10]> input_129_cast_fp16 = conv(bias = model_model_12_cv2_conv_bias_to_fp16, dilations = var_427, groups = var_19, pad = input_129_pad_0, pad_type = input_129_pad_type_0, strides = var_425, weight = model_model_12_cv2_conv_weight_to_fp16, x = input_127_cast_fp16)[name = tensor<string, []>("input_129_cast_fp16")];
            tensor<fp16, [1, 128, 10, 10]> input_131_cast_fp16 = silu(x = input_129_cast_fp16)[name = tensor<string, []>("input_131_cast_fp16")];
            tensor<fp32, []> var_432_scale_factor_height_0 = const()[name = tensor<string, []>("op_432_scale_factor_height_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp32, []> var_432_scale_factor_width_0 = const()[name = tensor<string, []>("op_432_scale_factor_width_0"), val = tensor<fp32, []>(0x1p+1)];
            tensor<fp16, [1, 128, 20, 20]> var_432_cast_fp16 = upsample_nearest_neighbor(scale_factor_height = var_432_scale_factor_height_0, scale_factor_width = var_432_scale_factor_width_0, x = input_131_cast_fp16)[name = tensor<string, []>("op_432_cast_fp16")];
            tensor<bool, []> input_133_interleave_0 = const()[name = tensor<string, []>("input_133_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 20, 20]> input_133_cast_fp16 = concat(axis = var_19, interleave = input_133_interleave_0, values = (var_432_cast_fp16, input_51_cast_fp16))[name = tensor<string, []>("input_133_cast_fp16")];
            tensor<int32, [2]> var_442 = const()[name = tensor<string, []>("op_442"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_444 = const()[name = tensor<string, []>("op_444"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_135_pad_type_0 = const()[name = tensor<string, []>("input_135_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_135_pad_0 = const()[name = tensor<string, []>("input_135_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 192, 1, 1]> model_model_15_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_15_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2840128)))];
            tensor<fp16, [64]> model_model_15_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_15_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2864768)))];
            tensor<fp16, [1, 64, 20, 20]> input_135_cast_fp16 = conv(bias = model_model_15_cv1_conv_bias_to_fp16, dilations = var_444, groups = var_19, pad = input_135_pad_0, pad_type = input_135_pad_type_0, strides = var_442, weight = model_model_15_cv1_conv_weight_to_fp16, x = input_133_cast_fp16)[name = tensor<string, []>("input_135_cast_fp16")];
            tensor<fp16, [1, 64, 20, 20]> var_447_cast_fp16 = silu(x = input_135_cast_fp16)[name = tensor<string, []>("op_447_cast_fp16")];
            tensor<int32, [2]> var_448 = const()[name = tensor<string, []>("op_448"), val = tensor<int32, [2]>([32, 32])];
            tensor<int32, []> var_449_axis_0 = const()[name = tensor<string, []>("op_449_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 32, 20, 20]> var_449_cast_fp16_0, tensor<fp16, [1, 32, 20, 20]> var_449_cast_fp16_1 = split(axis = var_449_axis_0, split_sizes = var_448, x = var_447_cast_fp16)[name = tensor<string, []>("op_449_cast_fp16")];
            tensor<int32, [2]> var_457 = const()[name = tensor<string, []>("op_457"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_459 = const()[name = tensor<string, []>("op_459"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_139_pad_type_0 = const()[name = tensor<string, []>("input_139_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_139_pad_0 = const()[name = tensor<string, []>("input_139_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_model_15_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_15_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2864960)))];
            tensor<fp16, [32]> model_model_15_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_15_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2883456)))];
            tensor<fp16, [1, 32, 20, 20]> input_139_cast_fp16 = conv(bias = model_model_15_m_0_cv1_conv_bias_to_fp16, dilations = var_459, groups = var_19, pad = input_139_pad_0, pad_type = input_139_pad_type_0, strides = var_457, weight = model_model_15_m_0_cv1_conv_weight_to_fp16, x = var_449_cast_fp16_1)[name = tensor<string, []>("input_139_cast_fp16")];
            tensor<fp16, [1, 32, 20, 20]> input_141_cast_fp16 = silu(x = input_139_cast_fp16)[name = tensor<string, []>("input_141_cast_fp16")];
            tensor<int32, [2]> var_466 = const()[name = tensor<string, []>("op_466"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_468 = const()[name = tensor<string, []>("op_468"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_143_pad_type_0 = const()[name = tensor<string, []>("input_143_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_143_pad_0 = const()[name = tensor<string, []>("input_143_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [32, 32, 3, 3]> model_model_15_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_15_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [32, 32, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2883584)))];
            tensor<fp16, [32]> model_model_15_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_15_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [32]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2902080)))];
            tensor<fp16, [1, 32, 20, 20]> input_143_cast_fp16 = conv(bias = model_model_15_m_0_cv2_conv_bias_to_fp16, dilations = var_468, groups = var_19, pad = input_143_pad_0, pad_type = input_143_pad_type_0, strides = var_466, weight = model_model_15_m_0_cv2_conv_weight_to_fp16, x = input_141_cast_fp16)[name = tensor<string, []>("input_143_cast_fp16")];
            tensor<fp16, [1, 32, 20, 20]> var_471_cast_fp16 = silu(x = input_143_cast_fp16)[name = tensor<string, []>("op_471_cast_fp16")];
            tensor<bool, []> input_145_interleave_0 = const()[name = tensor<string, []>("input_145_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 96, 20, 20]> input_145_cast_fp16 = concat(axis = var_19, interleave = input_145_interleave_0, values = (var_449_cast_fp16_0, var_449_cast_fp16_1, var_471_cast_fp16))[name = tensor<string, []>("input_145_cast_fp16")];
            tensor<int32, [2]> var_477 = const()[name = tensor<string, []>("op_477"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_479 = const()[name = tensor<string, []>("op_479"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_147_pad_type_0 = const()[name = tensor<string, []>("input_147_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_147_pad_0 = const()[name = tensor<string, []>("input_147_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 96, 1, 1]> model_model_15_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_15_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 96, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2902208)))];
            tensor<fp16, [64]> model_model_15_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_15_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2914560)))];
            tensor<fp16, [1, 64, 20, 20]> input_147_cast_fp16 = conv(bias = model_model_15_cv2_conv_bias_to_fp16, dilations = var_479, groups = var_19, pad = input_147_pad_0, pad_type = input_147_pad_type_0, strides = var_477, weight = model_model_15_cv2_conv_weight_to_fp16, x = input_145_cast_fp16)[name = tensor<string, []>("input_147_cast_fp16")];
            tensor<fp16, [1, 64, 20, 20]> input_149_cast_fp16 = silu(x = input_147_cast_fp16)[name = tensor<string, []>("input_149_cast_fp16")];
            tensor<int32, [2]> var_486 = const()[name = tensor<string, []>("op_486"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_488 = const()[name = tensor<string, []>("op_488"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_151_pad_type_0 = const()[name = tensor<string, []>("input_151_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_151_pad_0 = const()[name = tensor<string, []>("input_151_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_16_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_16_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2914752)))];
            tensor<fp16, [64]> model_model_16_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_16_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2988544)))];
            tensor<fp16, [1, 64, 10, 10]> input_151_cast_fp16 = conv(bias = model_model_16_conv_bias_to_fp16, dilations = var_488, groups = var_19, pad = input_151_pad_0, pad_type = input_151_pad_type_0, strides = var_486, weight = model_model_16_conv_weight_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_151_cast_fp16")];
            tensor<fp16, [1, 64, 10, 10]> var_491_cast_fp16 = silu(x = input_151_cast_fp16)[name = tensor<string, []>("op_491_cast_fp16")];
            tensor<bool, []> input_153_interleave_0 = const()[name = tensor<string, []>("input_153_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 10, 10]> input_153_cast_fp16 = concat(axis = var_19, interleave = input_153_interleave_0, values = (var_491_cast_fp16, input_131_cast_fp16))[name = tensor<string, []>("input_153_cast_fp16")];
            tensor<int32, [2]> var_501 = const()[name = tensor<string, []>("op_501"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_503 = const()[name = tensor<string, []>("op_503"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_155_pad_type_0 = const()[name = tensor<string, []>("input_155_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_155_pad_0 = const()[name = tensor<string, []>("input_155_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 192, 1, 1]> model_model_18_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_18_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2988736)))];
            tensor<fp16, [128]> model_model_18_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_18_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3037952)))];
            tensor<fp16, [1, 128, 10, 10]> input_155_cast_fp16 = conv(bias = model_model_18_cv1_conv_bias_to_fp16, dilations = var_503, groups = var_19, pad = input_155_pad_0, pad_type = input_155_pad_type_0, strides = var_501, weight = model_model_18_cv1_conv_weight_to_fp16, x = input_153_cast_fp16)[name = tensor<string, []>("input_155_cast_fp16")];
            tensor<fp16, [1, 128, 10, 10]> var_506_cast_fp16 = silu(x = input_155_cast_fp16)[name = tensor<string, []>("op_506_cast_fp16")];
            tensor<int32, [2]> var_507 = const()[name = tensor<string, []>("op_507"), val = tensor<int32, [2]>([64, 64])];
            tensor<int32, []> var_508_axis_0 = const()[name = tensor<string, []>("op_508_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 10, 10]> var_508_cast_fp16_0, tensor<fp16, [1, 64, 10, 10]> var_508_cast_fp16_1 = split(axis = var_508_axis_0, split_sizes = var_507, x = var_506_cast_fp16)[name = tensor<string, []>("op_508_cast_fp16")];
            tensor<int32, [2]> var_516 = const()[name = tensor<string, []>("op_516"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_518 = const()[name = tensor<string, []>("op_518"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_159_pad_type_0 = const()[name = tensor<string, []>("input_159_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_159_pad_0 = const()[name = tensor<string, []>("input_159_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_18_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_18_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3038272)))];
            tensor<fp16, [64]> model_model_18_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_18_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3112064)))];
            tensor<fp16, [1, 64, 10, 10]> input_159_cast_fp16 = conv(bias = model_model_18_m_0_cv1_conv_bias_to_fp16, dilations = var_518, groups = var_19, pad = input_159_pad_0, pad_type = input_159_pad_type_0, strides = var_516, weight = model_model_18_m_0_cv1_conv_weight_to_fp16, x = var_508_cast_fp16_1)[name = tensor<string, []>("input_159_cast_fp16")];
            tensor<fp16, [1, 64, 10, 10]> input_161_cast_fp16 = silu(x = input_159_cast_fp16)[name = tensor<string, []>("input_161_cast_fp16")];
            tensor<int32, [2]> var_525 = const()[name = tensor<string, []>("op_525"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_527 = const()[name = tensor<string, []>("op_527"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_163_pad_type_0 = const()[name = tensor<string, []>("input_163_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_163_pad_0 = const()[name = tensor<string, []>("input_163_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_18_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_18_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3112256)))];
            tensor<fp16, [64]> model_model_18_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_18_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3186048)))];
            tensor<fp16, [1, 64, 10, 10]> input_163_cast_fp16 = conv(bias = model_model_18_m_0_cv2_conv_bias_to_fp16, dilations = var_527, groups = var_19, pad = input_163_pad_0, pad_type = input_163_pad_type_0, strides = var_525, weight = model_model_18_m_0_cv2_conv_weight_to_fp16, x = input_161_cast_fp16)[name = tensor<string, []>("input_163_cast_fp16")];
            tensor<fp16, [1, 64, 10, 10]> var_530_cast_fp16 = silu(x = input_163_cast_fp16)[name = tensor<string, []>("op_530_cast_fp16")];
            tensor<bool, []> input_165_interleave_0 = const()[name = tensor<string, []>("input_165_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 192, 10, 10]> input_165_cast_fp16 = concat(axis = var_19, interleave = input_165_interleave_0, values = (var_508_cast_fp16_0, var_508_cast_fp16_1, var_530_cast_fp16))[name = tensor<string, []>("input_165_cast_fp16")];
            tensor<int32, [2]> var_536 = const()[name = tensor<string, []>("op_536"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_538 = const()[name = tensor<string, []>("op_538"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_167_pad_type_0 = const()[name = tensor<string, []>("input_167_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_167_pad_0 = const()[name = tensor<string, []>("input_167_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 192, 1, 1]> model_model_18_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_18_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 192, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3186240)))];
            tensor<fp16, [128]> model_model_18_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_18_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3235456)))];
            tensor<fp16, [1, 128, 10, 10]> input_167_cast_fp16 = conv(bias = model_model_18_cv2_conv_bias_to_fp16, dilations = var_538, groups = var_19, pad = input_167_pad_0, pad_type = input_167_pad_type_0, strides = var_536, weight = model_model_18_cv2_conv_weight_to_fp16, x = input_165_cast_fp16)[name = tensor<string, []>("input_167_cast_fp16")];
            tensor<fp16, [1, 128, 10, 10]> input_169_cast_fp16 = silu(x = input_167_cast_fp16)[name = tensor<string, []>("input_169_cast_fp16")];
            tensor<int32, [2]> var_545 = const()[name = tensor<string, []>("op_545"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_547 = const()[name = tensor<string, []>("op_547"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_171_pad_type_0 = const()[name = tensor<string, []>("input_171_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_171_pad_0 = const()[name = tensor<string, []>("input_171_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_19_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_19_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3235776)))];
            tensor<fp16, [128]> model_model_19_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_19_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3530752)))];
            tensor<fp16, [1, 128, 5, 5]> input_171_cast_fp16 = conv(bias = model_model_19_conv_bias_to_fp16, dilations = var_547, groups = var_19, pad = input_171_pad_0, pad_type = input_171_pad_type_0, strides = var_545, weight = model_model_19_conv_weight_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("input_171_cast_fp16")];
            tensor<fp16, [1, 128, 5, 5]> var_550_cast_fp16 = silu(x = input_171_cast_fp16)[name = tensor<string, []>("op_550_cast_fp16")];
            tensor<bool, []> input_173_interleave_0 = const()[name = tensor<string, []>("input_173_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 5, 5]> input_173_cast_fp16 = concat(axis = var_19, interleave = input_173_interleave_0, values = (var_550_cast_fp16, input_113_cast_fp16))[name = tensor<string, []>("input_173_cast_fp16")];
            tensor<int32, [2]> var_560 = const()[name = tensor<string, []>("op_560"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_562 = const()[name = tensor<string, []>("op_562"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_175_pad_type_0 = const()[name = tensor<string, []>("input_175_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_175_pad_0 = const()[name = tensor<string, []>("input_175_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 384, 1, 1]> model_model_21_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_21_cv1_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3531072)))];
            tensor<fp16, [256]> model_model_21_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_21_cv1_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3727744)))];
            tensor<fp16, [1, 256, 5, 5]> input_175_cast_fp16 = conv(bias = model_model_21_cv1_conv_bias_to_fp16, dilations = var_562, groups = var_19, pad = input_175_pad_0, pad_type = input_175_pad_type_0, strides = var_560, weight = model_model_21_cv1_conv_weight_to_fp16, x = input_173_cast_fp16)[name = tensor<string, []>("input_175_cast_fp16")];
            tensor<fp16, [1, 256, 5, 5]> var_565_cast_fp16 = silu(x = input_175_cast_fp16)[name = tensor<string, []>("op_565_cast_fp16")];
            tensor<int32, [2]> var_566 = const()[name = tensor<string, []>("op_566"), val = tensor<int32, [2]>([128, 128])];
            tensor<int32, []> var_567_axis_0 = const()[name = tensor<string, []>("op_567_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 5, 5]> var_567_cast_fp16_0, tensor<fp16, [1, 128, 5, 5]> var_567_cast_fp16_1 = split(axis = var_567_axis_0, split_sizes = var_566, x = var_565_cast_fp16)[name = tensor<string, []>("op_567_cast_fp16")];
            tensor<int32, [2]> var_575 = const()[name = tensor<string, []>("op_575"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_577 = const()[name = tensor<string, []>("op_577"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_179_pad_type_0 = const()[name = tensor<string, []>("input_179_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_179_pad_0 = const()[name = tensor<string, []>("input_179_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_21_m_0_cv1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_21_m_0_cv1_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3728320)))];
            tensor<fp16, [128]> model_model_21_m_0_cv1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_21_m_0_cv1_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4023296)))];
            tensor<fp16, [1, 128, 5, 5]> input_179_cast_fp16 = conv(bias = model_model_21_m_0_cv1_conv_bias_to_fp16, dilations = var_577, groups = var_19, pad = input_179_pad_0, pad_type = input_179_pad_type_0, strides = var_575, weight = model_model_21_m_0_cv1_conv_weight_to_fp16, x = var_567_cast_fp16_1)[name = tensor<string, []>("input_179_cast_fp16")];
            tensor<fp16, [1, 128, 5, 5]> input_181_cast_fp16 = silu(x = input_179_cast_fp16)[name = tensor<string, []>("input_181_cast_fp16")];
            tensor<int32, [2]> var_584 = const()[name = tensor<string, []>("op_584"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_586 = const()[name = tensor<string, []>("op_586"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_183_pad_type_0 = const()[name = tensor<string, []>("input_183_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_183_pad_0 = const()[name = tensor<string, []>("input_183_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [128, 128, 3, 3]> model_model_21_m_0_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_21_m_0_cv2_conv_weight_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4023616)))];
            tensor<fp16, [128]> model_model_21_m_0_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_21_m_0_cv2_conv_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4318592)))];
            tensor<fp16, [1, 128, 5, 5]> input_183_cast_fp16 = conv(bias = model_model_21_m_0_cv2_conv_bias_to_fp16, dilations = var_586, groups = var_19, pad = input_183_pad_0, pad_type = input_183_pad_type_0, strides = var_584, weight = model_model_21_m_0_cv2_conv_weight_to_fp16, x = input_181_cast_fp16)[name = tensor<string, []>("input_183_cast_fp16")];
            tensor<fp16, [1, 128, 5, 5]> var_589_cast_fp16 = silu(x = input_183_cast_fp16)[name = tensor<string, []>("op_589_cast_fp16")];
            tensor<bool, []> input_185_interleave_0 = const()[name = tensor<string, []>("input_185_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 384, 5, 5]> input_185_cast_fp16 = concat(axis = var_19, interleave = input_185_interleave_0, values = (var_567_cast_fp16_0, var_567_cast_fp16_1, var_589_cast_fp16))[name = tensor<string, []>("input_185_cast_fp16")];
            tensor<int32, [2]> var_595 = const()[name = tensor<string, []>("op_595"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_597 = const()[name = tensor<string, []>("op_597"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_187_pad_type_0 = const()[name = tensor<string, []>("input_187_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_187_pad_0 = const()[name = tensor<string, []>("input_187_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 384, 1, 1]> model_model_21_cv2_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_21_cv2_conv_weight_to_fp16"), val = tensor<fp16, [256, 384, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4318912)))];
            tensor<fp16, [256]> model_model_21_cv2_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_21_cv2_conv_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4515584)))];
            tensor<fp16, [1, 256, 5, 5]> input_187_cast_fp16 = conv(bias = model_model_21_cv2_conv_bias_to_fp16, dilations = var_597, groups = var_19, pad = input_187_pad_0, pad_type = input_187_pad_type_0, strides = var_595, weight = model_model_21_cv2_conv_weight_to_fp16, x = input_185_cast_fp16)[name = tensor<string, []>("input_187_cast_fp16")];
            tensor<fp16, [1, 256, 5, 5]> input_221_cast_fp16 = silu(x = input_187_cast_fp16)[name = tensor<string, []>("input_221_cast_fp16")];
            tensor<int32, [2]> var_620 = const()[name = tensor<string, []>("op_620"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_622 = const()[name = tensor<string, []>("op_622"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_189_pad_type_0 = const()[name = tensor<string, []>("input_189_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_189_pad_0 = const()[name = tensor<string, []>("input_189_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv2_0_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4516160)))];
            tensor<fp16, [64]> model_model_22_cv2_0_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4589952)))];
            tensor<fp16, [1, 64, 20, 20]> input_189_cast_fp16 = conv(bias = model_model_22_cv2_0_0_conv_bias_to_fp16, dilations = var_622, groups = var_19, pad = input_189_pad_0, pad_type = input_189_pad_type_0, strides = var_620, weight = model_model_22_cv2_0_0_conv_weight_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_189_cast_fp16")];
            tensor<fp16, [1, 64, 20, 20]> input_191_cast_fp16 = silu(x = input_189_cast_fp16)[name = tensor<string, []>("input_191_cast_fp16")];
            tensor<int32, [2]> var_629 = const()[name = tensor<string, []>("op_629"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_631 = const()[name = tensor<string, []>("op_631"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_193_pad_type_0 = const()[name = tensor<string, []>("input_193_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_193_pad_0 = const()[name = tensor<string, []>("input_193_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv2_0_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4590144)))];
            tensor<fp16, [64]> model_model_22_cv2_0_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4663936)))];
            tensor<fp16, [1, 64, 20, 20]> input_193_cast_fp16 = conv(bias = model_model_22_cv2_0_1_conv_bias_to_fp16, dilations = var_631, groups = var_19, pad = input_193_pad_0, pad_type = input_193_pad_type_0, strides = var_629, weight = model_model_22_cv2_0_1_conv_weight_to_fp16, x = input_191_cast_fp16)[name = tensor<string, []>("input_193_cast_fp16")];
            tensor<fp16, [1, 64, 20, 20]> input_195_cast_fp16 = silu(x = input_193_cast_fp16)[name = tensor<string, []>("input_195_cast_fp16")];
            tensor<int32, [2]> var_637 = const()[name = tensor<string, []>("op_637"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_639 = const()[name = tensor<string, []>("op_639"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_641_pad_type_0 = const()[name = tensor<string, []>("op_641_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_641_pad_0 = const()[name = tensor<string, []>("op_641_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_model_22_cv2_0_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4664128)))];
            tensor<fp16, [64]> model_model_22_cv2_0_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_0_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4672384)))];
            tensor<fp16, [1, 64, 20, 20]> var_641_cast_fp16 = conv(bias = model_model_22_cv2_0_2_bias_to_fp16, dilations = var_639, groups = var_19, pad = var_641_pad_0, pad_type = var_641_pad_type_0, strides = var_637, weight = model_model_22_cv2_0_2_weight_to_fp16, x = input_195_cast_fp16)[name = tensor<string, []>("op_641_cast_fp16")];
            tensor<int32, [2]> var_648 = const()[name = tensor<string, []>("op_648"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_650 = const()[name = tensor<string, []>("op_650"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_197_pad_type_0 = const()[name = tensor<string, []>("input_197_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_197_pad_0 = const()[name = tensor<string, []>("input_197_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv3_0_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4672576)))];
            tensor<fp16, [64]> model_model_22_cv3_0_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4746368)))];
            tensor<fp16, [1, 64, 20, 20]> input_197_cast_fp16 = conv(bias = model_model_22_cv3_0_0_conv_bias_to_fp16, dilations = var_650, groups = var_19, pad = input_197_pad_0, pad_type = input_197_pad_type_0, strides = var_648, weight = model_model_22_cv3_0_0_conv_weight_to_fp16, x = input_149_cast_fp16)[name = tensor<string, []>("input_197_cast_fp16")];
            tensor<fp16, [1, 64, 20, 20]> input_199_cast_fp16 = silu(x = input_197_cast_fp16)[name = tensor<string, []>("input_199_cast_fp16")];
            tensor<int32, [2]> var_657 = const()[name = tensor<string, []>("op_657"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_659 = const()[name = tensor<string, []>("op_659"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_201_pad_type_0 = const()[name = tensor<string, []>("input_201_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_201_pad_0 = const()[name = tensor<string, []>("input_201_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv3_0_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4746560)))];
            tensor<fp16, [64]> model_model_22_cv3_0_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4820352)))];
            tensor<fp16, [1, 64, 20, 20]> input_201_cast_fp16 = conv(bias = model_model_22_cv3_0_1_conv_bias_to_fp16, dilations = var_659, groups = var_19, pad = input_201_pad_0, pad_type = input_201_pad_type_0, strides = var_657, weight = model_model_22_cv3_0_1_conv_weight_to_fp16, x = input_199_cast_fp16)[name = tensor<string, []>("input_201_cast_fp16")];
            tensor<fp16, [1, 64, 20, 20]> input_203_cast_fp16 = silu(x = input_201_cast_fp16)[name = tensor<string, []>("input_203_cast_fp16")];
            tensor<int32, [2]> var_665 = const()[name = tensor<string, []>("op_665"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_667 = const()[name = tensor<string, []>("op_667"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_669_pad_type_0 = const()[name = tensor<string, []>("op_669_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_669_pad_0 = const()[name = tensor<string, []>("op_669_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [8, 64, 1, 1]> model_model_22_cv3_0_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_2_weight_to_fp16"), val = tensor<fp16, [8, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4820544)))];
            tensor<fp16, [8]> model_model_22_cv3_0_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_0_2_bias_to_fp16"), val = tensor<fp16, [8]>([-0x1.27p+3, -0x1.274p+3, -0x1.268p+3, -0x1.268p+3, -0x1.26cp+3, -0x1.28p+3, -0x1.268p+3, -0x1.26cp+3])];
            tensor<fp16, [1, 8, 20, 20]> var_669_cast_fp16 = conv(bias = model_model_22_cv3_0_2_bias_to_fp16, dilations = var_667, groups = var_19, pad = var_669_pad_0, pad_type = var_669_pad_type_0, strides = var_665, weight = model_model_22_cv3_0_2_weight_to_fp16, x = input_203_cast_fp16)[name = tensor<string, []>("op_669_cast_fp16")];
            tensor<bool, []> xi_1_interleave_0 = const()[name = tensor<string, []>("xi_1_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 72, 20, 20]> xi_1_cast_fp16 = concat(axis = var_19, interleave = xi_1_interleave_0, values = (var_641_cast_fp16, var_669_cast_fp16))[name = tensor<string, []>("xi_1_cast_fp16")];
            tensor<int32, [2]> var_678 = const()[name = tensor<string, []>("op_678"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_680 = const()[name = tensor<string, []>("op_680"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_205_pad_type_0 = const()[name = tensor<string, []>("input_205_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_205_pad_0 = const()[name = tensor<string, []>("input_205_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 128, 3, 3]> model_model_22_cv2_1_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4821632)))];
            tensor<fp16, [64]> model_model_22_cv2_1_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4969152)))];
            tensor<fp16, [1, 64, 10, 10]> input_205_cast_fp16 = conv(bias = model_model_22_cv2_1_0_conv_bias_to_fp16, dilations = var_680, groups = var_19, pad = input_205_pad_0, pad_type = input_205_pad_type_0, strides = var_678, weight = model_model_22_cv2_1_0_conv_weight_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("input_205_cast_fp16")];
            tensor<fp16, [1, 64, 10, 10]> input_207_cast_fp16 = silu(x = input_205_cast_fp16)[name = tensor<string, []>("input_207_cast_fp16")];
            tensor<int32, [2]> var_687 = const()[name = tensor<string, []>("op_687"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_689 = const()[name = tensor<string, []>("op_689"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_209_pad_type_0 = const()[name = tensor<string, []>("input_209_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_209_pad_0 = const()[name = tensor<string, []>("input_209_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv2_1_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4969344)))];
            tensor<fp16, [64]> model_model_22_cv2_1_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5043136)))];
            tensor<fp16, [1, 64, 10, 10]> input_209_cast_fp16 = conv(bias = model_model_22_cv2_1_1_conv_bias_to_fp16, dilations = var_689, groups = var_19, pad = input_209_pad_0, pad_type = input_209_pad_type_0, strides = var_687, weight = model_model_22_cv2_1_1_conv_weight_to_fp16, x = input_207_cast_fp16)[name = tensor<string, []>("input_209_cast_fp16")];
            tensor<fp16, [1, 64, 10, 10]> input_211_cast_fp16 = silu(x = input_209_cast_fp16)[name = tensor<string, []>("input_211_cast_fp16")];
            tensor<int32, [2]> var_695 = const()[name = tensor<string, []>("op_695"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_697 = const()[name = tensor<string, []>("op_697"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_699_pad_type_0 = const()[name = tensor<string, []>("op_699_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_699_pad_0 = const()[name = tensor<string, []>("op_699_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_model_22_cv2_1_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5043328)))];
            tensor<fp16, [64]> model_model_22_cv2_1_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_1_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5051584)))];
            tensor<fp16, [1, 64, 10, 10]> var_699_cast_fp16 = conv(bias = model_model_22_cv2_1_2_bias_to_fp16, dilations = var_697, groups = var_19, pad = var_699_pad_0, pad_type = var_699_pad_type_0, strides = var_695, weight = model_model_22_cv2_1_2_weight_to_fp16, x = input_211_cast_fp16)[name = tensor<string, []>("op_699_cast_fp16")];
            tensor<int32, [2]> var_706 = const()[name = tensor<string, []>("op_706"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_708 = const()[name = tensor<string, []>("op_708"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_213_pad_type_0 = const()[name = tensor<string, []>("input_213_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_213_pad_0 = const()[name = tensor<string, []>("input_213_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 128, 3, 3]> model_model_22_cv3_1_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5051776)))];
            tensor<fp16, [64]> model_model_22_cv3_1_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5199296)))];
            tensor<fp16, [1, 64, 10, 10]> input_213_cast_fp16 = conv(bias = model_model_22_cv3_1_0_conv_bias_to_fp16, dilations = var_708, groups = var_19, pad = input_213_pad_0, pad_type = input_213_pad_type_0, strides = var_706, weight = model_model_22_cv3_1_0_conv_weight_to_fp16, x = input_169_cast_fp16)[name = tensor<string, []>("input_213_cast_fp16")];
            tensor<fp16, [1, 64, 10, 10]> input_215_cast_fp16 = silu(x = input_213_cast_fp16)[name = tensor<string, []>("input_215_cast_fp16")];
            tensor<int32, [2]> var_715 = const()[name = tensor<string, []>("op_715"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_717 = const()[name = tensor<string, []>("op_717"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_217_pad_type_0 = const()[name = tensor<string, []>("input_217_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_217_pad_0 = const()[name = tensor<string, []>("input_217_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv3_1_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5199488)))];
            tensor<fp16, [64]> model_model_22_cv3_1_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5273280)))];
            tensor<fp16, [1, 64, 10, 10]> input_217_cast_fp16 = conv(bias = model_model_22_cv3_1_1_conv_bias_to_fp16, dilations = var_717, groups = var_19, pad = input_217_pad_0, pad_type = input_217_pad_type_0, strides = var_715, weight = model_model_22_cv3_1_1_conv_weight_to_fp16, x = input_215_cast_fp16)[name = tensor<string, []>("input_217_cast_fp16")];
            tensor<fp16, [1, 64, 10, 10]> input_219_cast_fp16 = silu(x = input_217_cast_fp16)[name = tensor<string, []>("input_219_cast_fp16")];
            tensor<int32, [2]> var_723 = const()[name = tensor<string, []>("op_723"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_725 = const()[name = tensor<string, []>("op_725"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_727_pad_type_0 = const()[name = tensor<string, []>("op_727_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_727_pad_0 = const()[name = tensor<string, []>("op_727_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [8, 64, 1, 1]> model_model_22_cv3_1_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_2_weight_to_fp16"), val = tensor<fp16, [8, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5273472)))];
            tensor<fp16, [8]> model_model_22_cv3_1_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_1_2_bias_to_fp16"), val = tensor<fp16, [8]>([-0x1.f64p+2, -0x1.004p+3, -0x1.f5cp+2, -0x1.f78p+2, -0x1.f84p+2, -0x1.facp+2, -0x1.f68p+2, -0x1.f5cp+2])];
            tensor<fp16, [1, 8, 10, 10]> var_727_cast_fp16 = conv(bias = model_model_22_cv3_1_2_bias_to_fp16, dilations = var_725, groups = var_19, pad = var_727_pad_0, pad_type = var_727_pad_type_0, strides = var_723, weight = model_model_22_cv3_1_2_weight_to_fp16, x = input_219_cast_fp16)[name = tensor<string, []>("op_727_cast_fp16")];
            tensor<bool, []> xi_3_interleave_0 = const()[name = tensor<string, []>("xi_3_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 72, 10, 10]> xi_3_cast_fp16 = concat(axis = var_19, interleave = xi_3_interleave_0, values = (var_699_cast_fp16, var_727_cast_fp16))[name = tensor<string, []>("xi_3_cast_fp16")];
            tensor<int32, [2]> var_736 = const()[name = tensor<string, []>("op_736"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_738 = const()[name = tensor<string, []>("op_738"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_223_pad_type_0 = const()[name = tensor<string, []>("input_223_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_223_pad_0 = const()[name = tensor<string, []>("input_223_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 256, 3, 3]> model_model_22_cv2_2_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5274560)))];
            tensor<fp16, [64]> model_model_22_cv2_2_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5569536)))];
            tensor<fp16, [1, 64, 5, 5]> input_223_cast_fp16 = conv(bias = model_model_22_cv2_2_0_conv_bias_to_fp16, dilations = var_738, groups = var_19, pad = input_223_pad_0, pad_type = input_223_pad_type_0, strides = var_736, weight = model_model_22_cv2_2_0_conv_weight_to_fp16, x = input_221_cast_fp16)[name = tensor<string, []>("input_223_cast_fp16")];
            tensor<fp16, [1, 64, 5, 5]> input_225_cast_fp16 = silu(x = input_223_cast_fp16)[name = tensor<string, []>("input_225_cast_fp16")];
            tensor<int32, [2]> var_745 = const()[name = tensor<string, []>("op_745"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_747 = const()[name = tensor<string, []>("op_747"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_227_pad_type_0 = const()[name = tensor<string, []>("input_227_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_227_pad_0 = const()[name = tensor<string, []>("input_227_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv2_2_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5569728)))];
            tensor<fp16, [64]> model_model_22_cv2_2_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5643520)))];
            tensor<fp16, [1, 64, 5, 5]> input_227_cast_fp16 = conv(bias = model_model_22_cv2_2_1_conv_bias_to_fp16, dilations = var_747, groups = var_19, pad = input_227_pad_0, pad_type = input_227_pad_type_0, strides = var_745, weight = model_model_22_cv2_2_1_conv_weight_to_fp16, x = input_225_cast_fp16)[name = tensor<string, []>("input_227_cast_fp16")];
            tensor<fp16, [1, 64, 5, 5]> input_229_cast_fp16 = silu(x = input_227_cast_fp16)[name = tensor<string, []>("input_229_cast_fp16")];
            tensor<int32, [2]> var_753 = const()[name = tensor<string, []>("op_753"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_755 = const()[name = tensor<string, []>("op_755"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_757_pad_type_0 = const()[name = tensor<string, []>("op_757_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_757_pad_0 = const()[name = tensor<string, []>("op_757_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [64, 64, 1, 1]> model_model_22_cv2_2_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_2_weight_to_fp16"), val = tensor<fp16, [64, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5643712)))];
            tensor<fp16, [64]> model_model_22_cv2_2_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv2_2_2_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5651968)))];
            tensor<fp16, [1, 64, 5, 5]> var_757_cast_fp16 = conv(bias = model_model_22_cv2_2_2_bias_to_fp16, dilations = var_755, groups = var_19, pad = var_757_pad_0, pad_type = var_757_pad_type_0, strides = var_753, weight = model_model_22_cv2_2_2_weight_to_fp16, x = input_229_cast_fp16)[name = tensor<string, []>("op_757_cast_fp16")];
            tensor<int32, [2]> var_764 = const()[name = tensor<string, []>("op_764"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_766 = const()[name = tensor<string, []>("op_766"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_231_pad_type_0 = const()[name = tensor<string, []>("input_231_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_231_pad_0 = const()[name = tensor<string, []>("input_231_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 256, 3, 3]> model_model_22_cv3_2_0_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_0_conv_weight_to_fp16"), val = tensor<fp16, [64, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5652160)))];
            tensor<fp16, [64]> model_model_22_cv3_2_0_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_0_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5947136)))];
            tensor<fp16, [1, 64, 5, 5]> input_231_cast_fp16 = conv(bias = model_model_22_cv3_2_0_conv_bias_to_fp16, dilations = var_766, groups = var_19, pad = input_231_pad_0, pad_type = input_231_pad_type_0, strides = var_764, weight = model_model_22_cv3_2_0_conv_weight_to_fp16, x = input_221_cast_fp16)[name = tensor<string, []>("input_231_cast_fp16")];
            tensor<fp16, [1, 64, 5, 5]> input_233_cast_fp16 = silu(x = input_231_cast_fp16)[name = tensor<string, []>("input_233_cast_fp16")];
            tensor<int32, [2]> var_773 = const()[name = tensor<string, []>("op_773"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_775 = const()[name = tensor<string, []>("op_775"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_235_pad_type_0 = const()[name = tensor<string, []>("input_235_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_235_pad_0 = const()[name = tensor<string, []>("input_235_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<fp16, [64, 64, 3, 3]> model_model_22_cv3_2_1_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_1_conv_weight_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5947328)))];
            tensor<fp16, [64]> model_model_22_cv3_2_1_conv_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_1_conv_bias_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6021120)))];
            tensor<fp16, [1, 64, 5, 5]> input_235_cast_fp16 = conv(bias = model_model_22_cv3_2_1_conv_bias_to_fp16, dilations = var_775, groups = var_19, pad = input_235_pad_0, pad_type = input_235_pad_type_0, strides = var_773, weight = model_model_22_cv3_2_1_conv_weight_to_fp16, x = input_233_cast_fp16)[name = tensor<string, []>("input_235_cast_fp16")];
            tensor<fp16, [1, 64, 5, 5]> input_237_cast_fp16 = silu(x = input_235_cast_fp16)[name = tensor<string, []>("input_237_cast_fp16")];
            tensor<int32, [2]> var_781 = const()[name = tensor<string, []>("op_781"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_783 = const()[name = tensor<string, []>("op_783"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_785_pad_type_0 = const()[name = tensor<string, []>("op_785_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_785_pad_0 = const()[name = tensor<string, []>("op_785_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [8, 64, 1, 1]> model_model_22_cv3_2_2_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_2_weight_to_fp16"), val = tensor<fp16, [8, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6021312)))];
            tensor<fp16, [8]> model_model_22_cv3_2_2_bias_to_fp16 = const()[name = tensor<string, []>("model_model_22_cv3_2_2_bias_to_fp16"), val = tensor<fp16, [8]>([-0x1.a2cp+2, -0x1.a2cp+2, -0x1.a2cp+2, -0x1.a2cp+2, -0x1.a2cp+2, -0x1.a2cp+2, -0x1.a3p+2, -0x1.a2cp+2])];
            tensor<fp16, [1, 8, 5, 5]> var_785_cast_fp16 = conv(bias = model_model_22_cv3_2_2_bias_to_fp16, dilations = var_783, groups = var_19, pad = var_785_pad_0, pad_type = var_785_pad_type_0, strides = var_781, weight = model_model_22_cv3_2_2_weight_to_fp16, x = input_237_cast_fp16)[name = tensor<string, []>("op_785_cast_fp16")];
            tensor<bool, []> xi_interleave_0 = const()[name = tensor<string, []>("xi_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 72, 5, 5]> xi_cast_fp16 = concat(axis = var_19, interleave = xi_interleave_0, values = (var_757_cast_fp16, var_785_cast_fp16))[name = tensor<string, []>("xi_cast_fp16")];
            tensor<int32, [3]> var_789 = const()[name = tensor<string, []>("op_789"), val = tensor<int32, [3]>([1, 72, -1])];
            tensor<fp16, [1, 72, 400]> var_790_cast_fp16 = reshape(shape = var_789, x = xi_1_cast_fp16)[name = tensor<string, []>("op_790_cast_fp16")];
            tensor<int32, [3]> var_791 = const()[name = tensor<string, []>("op_791"), val = tensor<int32, [3]>([1, 72, -1])];
            tensor<fp16, [1, 72, 100]> var_792_cast_fp16 = reshape(shape = var_791, x = xi_3_cast_fp16)[name = tensor<string, []>("op_792_cast_fp16")];
            tensor<int32, [3]> var_793 = const()[name = tensor<string, []>("op_793"), val = tensor<int32, [3]>([1, 72, -1])];
            tensor<fp16, [1, 72, 25]> var_794_cast_fp16 = reshape(shape = var_793, x = xi_cast_fp16)[name = tensor<string, []>("op_794_cast_fp16")];
            tensor<bool, []> var_796_interleave_0 = const()[name = tensor<string, []>("op_796_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 72, 525]> var_796_cast_fp16 = concat(axis = var_20, interleave = var_796_interleave_0, values = (var_790_cast_fp16, var_792_cast_fp16, var_794_cast_fp16))[name = tensor<string, []>("op_796_cast_fp16")];
            tensor<int32, [2]> var_797 = const()[name = tensor<string, []>("op_797"), val = tensor<int32, [2]>([64, 8])];
            tensor<int32, []> var_798_axis_0 = const()[name = tensor<string, []>("op_798_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 525]> var_798_cast_fp16_0, tensor<fp16, [1, 8, 525]> var_798_cast_fp16_1 = split(axis = var_798_axis_0, split_sizes = var_797, x = var_796_cast_fp16)[name = tensor<string, []>("op_798_cast_fp16")];
            tensor<int32, [4]> var_804 = const()[name = tensor<string, []>("op_804"), val = tensor<int32, [4]>([1, 4, 16, 525])];
            tensor<fp16, [1, 4, 16, 525]> var_805_cast_fp16 = reshape(shape = var_804, x = var_798_cast_fp16_0)[name = tensor<string, []>("op_805_cast_fp16")];
            tensor<int32, [4]> var_806_perm_0 = const()[name = tensor<string, []>("op_806_perm_0"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<fp16, [1, 16, 4, 525]> transpose_1 = transpose(perm = var_806_perm_0, x = var_805_cast_fp16)[name = tensor<string, []>("transpose_1")];
            tensor<fp16, [1, 16, 4, 525]> input_cast_fp16 = softmax(axis = var_19, x = transpose_1)[name = tensor<string, []>("input_cast_fp16")];
            tensor<int32, [2]> var_809 = const()[name = tensor<string, []>("op_809"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_811 = const()[name = tensor<string, []>("op_811"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_813_pad_type_0 = const()[name = tensor<string, []>("op_813_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_813_pad_0 = const()[name = tensor<string, []>("op_813_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 16, 1, 1]> model_model_22_dfl_conv_weight_to_fp16 = const()[name = tensor<string, []>("model_model_22_dfl_conv_weight_to_fp16"), val = tensor<fp16, [1, 16, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6022400)))];
            tensor<fp16, [1, 1, 4, 525]> var_813_cast_fp16 = conv(dilations = var_811, groups = var_19, pad = var_813_pad_0, pad_type = var_813_pad_type_0, strides = var_809, weight = model_model_22_dfl_conv_weight_to_fp16, x = input_cast_fp16)[name = tensor<string, []>("op_813_cast_fp16")];
            tensor<int32, [3]> var_814 = const()[name = tensor<string, []>("op_814"), val = tensor<int32, [3]>([1, 4, 525])];
            tensor<fp16, [1, 4, 525]> distance_cast_fp16 = reshape(shape = var_814, x = var_813_cast_fp16)[name = tensor<string, []>("distance_cast_fp16")];
            tensor<int32, [2]> var_817_split_sizes_0 = const()[name = tensor<string, []>("op_817_split_sizes_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, []> var_817_axis_0 = const()[name = tensor<string, []>("op_817_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 2, 525]> var_817_cast_fp16_0, tensor<fp16, [1, 2, 525]> var_817_cast_fp16_1 = split(axis = var_817_axis_0, split_sizes = var_817_split_sizes_0, x = distance_cast_fp16)[name = tensor<string, []>("op_817_cast_fp16")];
            tensor<fp16, [1, 2, 525]> anchor_points_to_fp16 = const()[name = tensor<string, []>("anchor_points_to_fp16"), val = tensor<fp16, [1, 2, 525]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6022528)))];
            tensor<fp16, [1, 2, 525]> x1y1_cast_fp16 = sub(x = anchor_points_to_fp16, y = var_817_cast_fp16_0)[name = tensor<string, []>("x1y1_cast_fp16")];
            tensor<fp16, [1, 2, 525]> x2y2_cast_fp16 = add(x = anchor_points_to_fp16, y = var_817_cast_fp16_1)[name = tensor<string, []>("x2y2_cast_fp16")];
            tensor<fp16, [1, 2, 525]> var_821_cast_fp16 = add(x = x1y1_cast_fp16, y = x2y2_cast_fp16)[name = tensor<string, []>("op_821_cast_fp16")];
            tensor<fp16, []> _inversed_c_xy_y_0_to_fp16 = const()[name = tensor<string, []>("_inversed_c_xy_y_0_to_fp16"), val = tensor<fp16, []>(0x1p-1)];
            tensor<fp16, [1, 2, 525]> _inversed_c_xy_cast_fp16 = mul(x = var_821_cast_fp16, y = _inversed_c_xy_y_0_to_fp16)[name = tensor<string, []>("_inversed_c_xy_cast_fp16")];
            tensor<fp16, [1, 2, 525]> wh_cast_fp16 = sub(x = x2y2_cast_fp16, y = x1y1_cast_fp16)[name = tensor<string, []>("wh_cast_fp16")];
            tensor<bool, []> var_826_interleave_0 = const()[name = tensor<string, []>("op_826_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 4, 525]> var_826_cast_fp16 = concat(axis = var_19, interleave = var_826_interleave_0, values = (_inversed_c_xy_cast_fp16, wh_cast_fp16))[name = tensor<string, []>("op_826_cast_fp16")];
            tensor<fp16, [1, 525]> var_8_to_fp16 = const()[name = tensor<string, []>("op_8_to_fp16"), val = tensor<fp16, [1, 525]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6024704)))];
            tensor<fp16, [1, 4, 525]> dbox_cast_fp16 = mul(x = var_826_cast_fp16, y = var_8_to_fp16)[name = tensor<string, []>("dbox_cast_fp16")];
            tensor<fp16, [1, 8, 525]> var_828_cast_fp16 = sigmoid(x = var_798_cast_fp16_1)[name = tensor<string, []>("op_828_cast_fp16")];
            tensor<bool, []> var_830_interleave_0 = const()[name = tensor<string, []>("op_830_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 12, 525]> var_830_cast_fp16 = concat(axis = var_19, interleave = var_830_interleave_0, values = (dbox_cast_fp16, var_828_cast_fp16))[name = tensor<string, []>("op_830_cast_fp16")];
            tensor<int32, [3]> var_833_begin_0 = const()[name = tensor<string, []>("op_833_begin_0"), val = tensor<int32, [3]>([0, 0, 0])];
            tensor<int32, [3]> var_833_end_0 = const()[name = tensor<string, []>("op_833_end_0"), val = tensor<int32, [3]>([1, 12, 525])];
            tensor<bool, [3]> var_833_end_mask_0 = const()[name = tensor<string, []>("op_833_end_mask_0"), val = tensor<bool, [3]>([false, true, true])];
            tensor<bool, [3]> var_833_squeeze_mask_0 = const()[name = tensor<string, []>("op_833_squeeze_mask_0"), val = tensor<bool, [3]>([true, false, false])];
            tensor<fp16, [12, 525]> var_833_cast_fp16 = slice_by_index(begin = var_833_begin_0, end = var_833_end_0, end_mask = var_833_end_mask_0, squeeze_mask = var_833_squeeze_mask_0, x = var_830_cast_fp16)[name = tensor<string, []>("op_833_cast_fp16")];
            tensor<int32, [2]> var_836_perm_0 = const()[name = tensor<string, []>("op_836_perm_0"), val = tensor<int32, [2]>([1, 0])];
            tensor<int32, [2]> var_839 = const()[name = tensor<string, []>("op_839"), val = tensor<int32, [2]>([4, 8])];
            tensor<int32, []> var_841_axis_0 = const()[name = tensor<string, []>("op_841_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [525, 12]> transpose_0 = transpose(perm = var_836_perm_0, x = var_833_cast_fp16)[name = tensor<string, []>("transpose_0")];
            tensor<fp16, [525, 4]> var_841_cast_fp16_0, tensor<fp16, [525, 8]> var_841_cast_fp16_1 = split(axis = var_841_axis_0, split_sizes = var_839, x = transpose_0)[name = tensor<string, []>("op_841_cast_fp16")];
            tensor<string, []> var_841_cast_fp16_1_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_841_cast_fp16_1_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp16, []> var_844_to_fp16 = const()[name = tensor<string, []>("op_844_to_fp16"), val = tensor<fp16, []>(0x1.998p-8)];
            tensor<fp16, [525, 4]> var_845_cast_fp16 = mul(x = var_841_cast_fp16_0, y = var_844_to_fp16)[name = tensor<string, []>("op_845_cast_fp16")];
            tensor<string, []> var_845_cast_fp16_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_845_cast_fp16_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [525, 4]> var_845 = cast(dtype = var_845_cast_fp16_to_fp32_dtype_0, x = var_845_cast_fp16)[name = tensor<string, []>("cast_7")];
            tensor<fp32, [525, 8]> var_841_1 = cast(dtype = var_841_cast_fp16_1_to_fp32_dtype_0, x = var_841_cast_fp16_1)[name = tensor<string, []>("cast_8")];
        } -> (var_841_1, var_845);
}